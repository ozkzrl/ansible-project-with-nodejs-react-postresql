- name: configure postgre instance
  hosts: _ansible_postgresql
  become: true
  vars_files:
    - secret.yml
  tasks:
    - name: upgrade all packages
      ansible.builtin.dnf:
        name: '*'
        state: latest
    # dnf update -y

    - name: remove Older versions of Docker if installed
      ansible.builtin.dnf:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
          - podman
          - runc
        state: removed

    - name: Install "dnf-plugins-core"
      ansible.builtin.dnf:
        name: "dnf-plugins-core"
        state: latest

    - name: Add Docker repo
      ansible.builtin.get_url:  
        url: https://download.docker.com/linux/rhel/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo 

    - name: Install Docker
      ansible.builtin.package:
        name: docker-ce
        state: latest

    - name: Install Python and pip dependencies
      ansible.builtin.dnf:
        name: 
          - python3
          - python3-pip
          - python3-devel
          - gcc
        state: present

    - name: Upgrade pip to latest version
      ansible.builtin.pip:
        name: pip
        state: latest
        executable: pip3

    - name: Install Docker SDK for Python with compatible versions
      ansible.builtin.pip:
        name:
          - docker==6.1.3
          - requests==2.31.0
          - urllib3<2.0
        state: present
        executable: pip3
        extra_args: "--force-reinstall --ignore-installed"

    - name: Add ec2-user to docker group
      ansible.builtin.user:
        name: ec2-user
        groups: docker
        append: yes   

        # usermod -a -G docker ec2-user

    - name: Start Docker service
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Reset ssh connection to pick up docker group
      ansible.builtin.meta: reset_connection

    - name: Wait for Docker daemon to be ready
      ansible.builtin.wait_for:
        path: /var/run/docker.sock
        state: present
        delay: 5
        timeout: 30

    - name: Test Docker connection
      ansible.builtin.command: docker version
      register: docker_version
      changed_when: false

    - name: Show Docker version
      ansible.builtin.debug:
        var: docker_version.stdout_lines

    - name: copy files to the postgresql node
      ansible.builtin.copy:
        src: /home/ec2-user/ansible/ansible-project/postgres/
        dest: /home/ec2-user/postgresql

    - name: remove cw_postgre container
      community.docker.docker_container:
        name: o_postgre
        state: absent
        force_kill: true   

    - name: remove clarusway/postgre image
      community.docker.docker_image:
        name: ondia/postgre
        state: absent

    - name: build container image
      community.docker.docker_image:
        name: ondia/postgre
        build:
          path: /home/ec2-user/postgresql
        source: build
        state: present
      register: image_info

      # docker build -t ondia/postgre .

    - name: print the image info
      ansible.builtin.debug:
        var: image_info

    - name: Launch postgresql docker container
      community.docker.docker_container:
        name: o_postgre
        image: ondia/postgre
        state: started
        ports: 
        - "5432:5432"
        env:
          # POSTGRES_PASSWORD: "Pp123456789" 
          POSTGRES_PASSWORD: "{{ password }}"
        volumes:
          - /db-data:/var/lib/postgresql/data 
      register: container_info
  
# docker run --name o_postgre -p "5432:5432" -e POSTGRES_PASSWORD=Pp123456789 -v myvol:/var/lib/postgresql/data ondia/postgre

    - name: print the container info
      ansible.builtin.debug:
        var: container_info